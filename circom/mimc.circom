pragma circom 2.1.4;

template MiMC5(){
    signal input x;
    signal input k;
    signal output h;

    var nRounds=10;
    var c[nRounds]=[
        0,
        89340043874917336066444857760977428284677775666185669089356506388229425626610,
        25874620585864694438413877826363862041821542393097171842467201956326053404536,
        28033837599854395080438283275711971660299822381381965613376425356341963024619,
        61089283805793138799676425593538840520104379123956059224156240752553188330758,
        52311356050964865282194396448422570881753375931874828566335409963639394732443,
        109814475832204193364942005151700516808298268840685516413458556289750341290662,
        46765118589576502958101631801884976062218065092021760057759552800682187634431,
        60383894017578745499189322133995433763420201570935148184068144824544981211766,
        107799879177145263483930731041998346557431030806962151355710143561777158775322
        ];

    signal lastOutput[nRounds+1];
    var base[nRounds];
    signal base2[nRounds];
    signal base4[nRounds];

    lastOutput[0]<==x;

    for (var i =0;i <nRounds;i++){
        base[i]=lastOutput[i]+k+c[i];
        base2[i]<==base[i]*base[i];
        base4[i]<==base2[i]*base2[i];
        lastOutput[i+1]<==base4[i]*base[i];
    }
    h<== lastOutput[nRounds]+k;

}

component main=MiMC5();
